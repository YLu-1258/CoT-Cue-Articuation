nohup: ignoring input
INFO 06-07 06:18:11 [__init__.py:243] Automatically detected platform cuda.
INFO 06-07 06:18:15 [__init__.py:31] Available plugins for group vllm.general_plugins:
INFO 06-07 06:18:15 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
INFO 06-07 06:18:15 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
INFO 06-07 06:18:17 [api_server.py:1289] vLLM API server version 0.9.0.1
INFO 06-07 06:18:18 [cli_args.py:300] non-default args: {'port': 6004}
INFO 06-07 06:18:28 [config.py:793] This model supports multiple tasks: {'embed', 'classify', 'score', 'reward', 'generate'}. Defaulting to 'generate'.
INFO 06-07 06:18:28 [config.py:2118] Chunked prefill is enabled with max_num_batched_tokens=2048.
INFO 06-07 06:18:34 [__init__.py:243] Automatically detected platform cuda.
INFO 06-07 06:18:39 [core.py:438] Waiting for init message from front-end.
INFO 06-07 06:18:39 [__init__.py:31] Available plugins for group vllm.general_plugins:
INFO 06-07 06:18:39 [__init__.py:33] - lora_filesystem_resolver -> vllm.plugins.lora_resolvers.filesystem_resolver:register_filesystem_resolver
INFO 06-07 06:18:39 [__init__.py:36] All plugins in this group will be loaded. Set `VLLM_PLUGINS` to control which plugins to load.
INFO 06-07 06:18:39 [core.py:65] Initializing a V1 LLM engine (v0.9.0.1) with config: model='meta-llama/Llama-3.1-8B-Instruct', speculative_config=None, tokenizer='meta-llama/Llama-3.1-8B-Instruct', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=False, dtype=torch.bfloat16, max_seq_len=131072, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=1, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=meta-llama/Llama-3.1-8B-Instruct, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=True, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level": 3, "custom_ops": ["none"], "splitting_ops": ["vllm.unified_attention", "vllm.unified_attention_with_output"], "compile_sizes": [], "inductor_compile_config": {"enable_auto_functionalized_v2": false}, "use_cudagraph": true, "cudagraph_num_of_warmups": 1, "cudagraph_capture_sizes": [512, 504, 496, 488, 480, 472, 464, 456, 448, 440, 432, 424, 416, 408, 400, 392, 384, 376, 368, 360, 352, 344, 336, 328, 320, 312, 304, 296, 288, 280, 272, 264, 256, 248, 240, 232, 224, 216, 208, 200, 192, 184, 176, 168, 160, 152, 144, 136, 128, 120, 112, 104, 96, 88, 80, 72, 64, 56, 48, 40, 32, 24, 16, 8, 4, 2, 1], "max_capture_size": 512}
WARNING 06-07 06:18:39 [utils.py:2671] Methods determine_num_available_blocks,device_config,get_cache_block_size_bytes,initialize_cache not implemented in <vllm.v1.worker.gpu_worker.Worker object at 0x7faf0a621450>
INFO 06-07 06:18:42 [parallel_state.py:1064] rank 0 in world size 1 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
WARNING 06-07 06:18:42 [topk_topp_sampler.py:58] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
INFO 06-07 06:18:42 [gpu_model_runner.py:1531] Starting to load model meta-llama/Llama-3.1-8B-Instruct...
INFO 06-07 06:18:42 [cuda.py:217] Using Flash Attention backend on V1 engine.
INFO 06-07 06:18:42 [backends.py:35] Using InductorAdaptor
INFO 06-07 06:18:43 [weight_utils.py:291] Using model weights format ['*.safetensors']
INFO 06-07 06:21:24 [weight_utils.py:307] Time spent downloading weights for meta-llama/Llama-3.1-8B-Instruct: 161.358579 seconds
Loading safetensors checkpoint shards:   0% Completed | 0/4 [00:00<?, ?it/s]
Loading safetensors checkpoint shards:  25% Completed | 1/4 [00:00<00:00,  4.24it/s]
Loading safetensors checkpoint shards:  50% Completed | 2/4 [00:01<00:01,  1.76it/s]
Loading safetensors checkpoint shards:  75% Completed | 3/4 [00:02<00:00,  1.32it/s]
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:03<00:00,  1.14it/s]
Loading safetensors checkpoint shards: 100% Completed | 4/4 [00:03<00:00,  1.30it/s]

INFO 06-07 06:21:27 [default_loader.py:280] Loading weights took 3.33 seconds
INFO 06-07 06:21:28 [gpu_model_runner.py:1549] Model loading took 14.9889 GiB and 165.318097 seconds
INFO 06-07 06:21:34 [backends.py:459] Using cache directory: /home/kevinchu/.cache/vllm/torch_compile_cache/5ce494eed2/rank_0_0 for vLLM's torch.compile
INFO 06-07 06:21:34 [backends.py:469] Dynamo bytecode transform time: 6.16 s
INFO 06-07 06:21:37 [backends.py:158] Cache the graph of shape None for later use
INFO 06-07 06:22:09 [backends.py:170] Compiling a graph for general shape takes 34.76 s
INFO 06-07 06:22:18 [monitor.py:33] torch.compile takes 40.93 s in total
INFO 06-07 06:22:19 [kv_cache_utils.py:637] GPU KV cache size: 214,320 tokens
INFO 06-07 06:22:19 [kv_cache_utils.py:640] Maximum concurrency for 131,072 tokens per request: 1.64x
INFO 06-07 06:23:13 [gpu_model_runner.py:1933] Graph capturing finished in 54 secs, took 0.51 GiB
INFO 06-07 06:23:13 [core.py:167] init engine (profile, create kv cache, warmup model) took 105.25 seconds
INFO 06-07 06:23:14 [loggers.py:134] vllm cache_config_info with initialization after num_gpu_blocks is: 13395
WARNING 06-07 06:23:14 [config.py:1339] Default sampling parameters have been overridden by the model's Hugging Face generation config recommended from the model creator. If this is not intended, please relaunch vLLM instance with `--generation-config vllm`.
INFO 06-07 06:23:14 [serving_chat.py:117] Using default chat sampling params from model: {'temperature': 0.6, 'top_p': 0.9}
INFO 06-07 06:23:14 [serving_completion.py:65] Using default completion sampling params from model: {'temperature': 0.6, 'top_p': 0.9}
INFO 06-07 06:23:14 [api_server.py:1336] Starting vLLM API server on http://0.0.0.0:6004
INFO 06-07 06:23:14 [launcher.py:28] Available routes are:
INFO 06-07 06:23:14 [launcher.py:36] Route: /openapi.json, Methods: GET, HEAD
INFO 06-07 06:23:14 [launcher.py:36] Route: /docs, Methods: GET, HEAD
INFO 06-07 06:23:14 [launcher.py:36] Route: /docs/oauth2-redirect, Methods: GET, HEAD
INFO 06-07 06:23:14 [launcher.py:36] Route: /redoc, Methods: GET, HEAD
INFO 06-07 06:23:14 [launcher.py:36] Route: /health, Methods: GET
INFO 06-07 06:23:14 [launcher.py:36] Route: /load, Methods: GET
INFO 06-07 06:23:14 [launcher.py:36] Route: /ping, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /ping, Methods: GET
INFO 06-07 06:23:14 [launcher.py:36] Route: /tokenize, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /detokenize, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /v1/models, Methods: GET
INFO 06-07 06:23:14 [launcher.py:36] Route: /version, Methods: GET
INFO 06-07 06:23:14 [launcher.py:36] Route: /v1/chat/completions, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /v1/completions, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /v1/embeddings, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /pooling, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /classify, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /score, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /v1/score, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /v1/audio/transcriptions, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /rerank, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /v1/rerank, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /v2/rerank, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /invocations, Methods: POST
INFO 06-07 06:23:14 [launcher.py:36] Route: /metrics, Methods: GET
INFO:     Started server process [547065]
INFO:     Waiting for application startup.
INFO:     Application startup complete.
INFO:     127.0.0.1:36832 - "GET /v1/models HTTP/1.1" 200 OK
INFO 06-07 06:30:14 [chat_utils.py:419] Detected the chat template content format to be 'string'. You can set `--chat-template-content-format` to override this.
INFO 06-07 06:30:14 [logger.py:42] Received request chatcmpl-eb2a85e8921a4e918f2c076ec12e40f2: prompt: '<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\n<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nHello, are you working?<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=0, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=131031, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None, extra_args=None), prompt_token_ids: None, prompt_embeds shape: None, lora_request: None, prompt_adapter_request: None.
INFO 06-07 06:30:14 [async_llm.py:261] Added request chatcmpl-eb2a85e8921a4e918f2c076ec12e40f2.
INFO:     127.0.0.1:36832 - "POST /v1/chat/completions HTTP/1.1" 200 OK
INFO 06-07 06:30:16 [logger.py:42] Received request chatcmpl-7c14715540a349108af2b925e3d5eee2: prompt: '<|begin_of_text|><|start_header_id|>system<|end_header_id|>\n\nCutting Knowledge Date: December 2023\nToday Date: 26 Jul 2024\n\n<|eot_id|><|start_header_id|>user<|end_header_id|>\n\nHello, can you help me test this connection?<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n', params: SamplingParams(n=1, presence_penalty=0.0, frequency_penalty=0.0, repetition_penalty=1.0, temperature=0.0, top_p=1.0, top_k=0, min_p=0.0, seed=None, stop=[], stop_token_ids=[], bad_words=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=131027, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None, guided_decoding=None, extra_args=None), prompt_token_ids: None, prompt_embeds shape: None, lora_request: None, prompt_adapter_request: None.
INFO 06-07 06:30:16 [async_llm.py:261] Added request chatcmpl-7c14715540a349108af2b925e3d5eee2.
INFO:     127.0.0.1:36832 - "POST /v1/chat/completions HTTP/1.1" 200 OK
INFO 06-07 06:30:24 [loggers.py:116] Engine 000: Avg prompt throughput: 8.6 tokens/s, Avg generation throughput: 10.9 tokens/s, Running: 0 reqs, Waiting: 0 reqs, GPU KV cache usage: 0.0%, Prefix cache hit rate: 37.2%
INFO 06-07 06:30:34 [loggers.py:116] Engine 000: Avg prompt throughput: 0.0 tokens/s, Avg generation throughput: 0.0 tokens/s, Running: 0 reqs, Waiting: 0 reqs, GPU KV cache usage: 0.0%, Prefix cache hit rate: 37.2%
